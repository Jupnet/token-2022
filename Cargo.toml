# The curve25519-dalek crate uses the `simd` backend by default in v4 if
# possible, which has very slow performance on some platforms with opt-level 0,
# which is the default for `dev` and `test` builds. This slowdown causes
# certain interactions in the solana-test-validator, such as verifying ZK
# proofs in transactions, to take much more than 400ms, creating problems in
# the test environment. To give better performance in the solana-test-validator
# during tests and dev builds, override the opt-level to 3 for the crate.
[profile.dev.package.curve25519-dalek]
opt-level = 3

[workspace]
resolver = "2"
members = [
  "clients/cli",
  #"clients/rust", omitted from workspace until a real client is generated
  "clients/rust-legacy",
  "confidential-transfer/ciphertext-arithmetic",
  "confidential-transfer/elgamal-registry",
  "confidential-transfer/proof-extraction",
  "confidential-transfer/proof-generation",
  "confidential-transfer/proof-tests",
  "program",
]

[workspace.package]
authors = ["Anza Maintainers <maintainers@anza.xyz>"]
repository = "https://github.com/solana-program/token-2022"
homepage = "https://solana-program.com"
license = "Apache-2.0"
edition = "2021"

[workspace.lints.rust.unexpected_cfgs]
level = "warn"
check-cfg = [
    'cfg(target_os, values("solana"))',
    'cfg(feature, values("frozen-abi", "no-entrypoint"))',
]

[workspace.metadata.cli]
solana = "2.1.0"

# Specify Rust toolchains for rustfmt, clippy, and build.
# Any unprovided toolchains default to stable.
[workspace.metadata.toolchains]
format = "nightly-2024-08-08"
lint = "nightly-2024-08-08"

[workspace.metadata.spellcheck]
config = "scripts/spellcheck.toml"

[workspace.metadata.release]
pre-release-commit-message = "Publish {{crate_name}} v{{version}}"
tag-message = "Publish {{crate_name}} v{{version}}"
consolidate-commits = false

[patch.crates-io]
# solana-sdk
solana-account-info =  { path = "../solana-sdk/account-info" }
solana-clock =  { path = "../solana-sdk/clock" }
solana-cpi =  { path = "../solana-sdk/cpi" }
solana-decode-error =  { path = "../solana-sdk/decode-error" }
solana-instruction =  { path = "../solana-sdk/instruction" }
solana-msg =  { path = "../solana-sdk/msg" }
solana-native-token =  { path = "../solana-sdk/native-token" }
solana-program-entrypoint =  { path = "../solana-sdk/program-entrypoint" }
solana-program-error =  { path = "../solana-sdk/program-error" }
solana-program-memory =  { path = "../solana-sdk/program-memory" }
solana-program-option =  { path = "../solana-sdk/program-option" }
solana-program-pack =  { path = "../solana-sdk/program-pack" }
solana-pubkey =  { path = "../solana-sdk/pubkey" }
solana-rent =  { path = "../solana-sdk/rent"    }
solana-sdk-ids =  { path = "../solana-sdk/sdk-ids" }
solana-sysvar =  { path = "../solana-sdk/sysvar" }
solana-feature-set =  { path = "../solana-sdk/feature-set" }
solana-logger =  { path = "../solana-sdk/logger" }
spl-pod = { path = "../libraries/pod" }

# solana
solana-account-decoder =  { path = "../account-decoder" }
solana-client =  { path = "../client" }
solana-cli-output =  { path = "../cli-output" }
solana-test-validator =  { path = "../test-validator" }
solana-transaction-status =  { path = "../transaction-status" }
solana-program-test =  { path = "../program-test" }
solana-zk-sdk =  { path = "../zk-sdk" }
solana-inline-spl =  { path = "../inline-spl" }
solana-clap-v3-utils =  { path = "../clap-v3-utils" }
solana-cli-config =  { path = "../cli-config" }
solana-remote-wallet =  { path = "../remote-wallet" }
solana-banks-interface =  { path = "../banks-interface" }
solana-rpc-client =  { path = "../rpc-client" }
solana-rpc-client-api =  { path = "../rpc-client-api" }

spl-transfer-hook-interface = { path = "../transfer-hook/interface" }
spl-associated-token-account = { path = "../associated-token-account/program" }
spl-token-2022 = { path = "./program" }
spl-token = { path = "../token/program" }